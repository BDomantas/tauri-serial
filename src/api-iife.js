if("__TAURI__"in window){var __TAURI_PLUGIN_SERIALPLUGIN__=function(e){"use strict";function t(e,t=!1){return window.__TAURI_INTERNALS__.transformCallback(e,t)}async function i(e,t={},i){return window.__TAURI_INTERNALS__.invoke(e,t,i)}"function"==typeof SuppressedError&&SuppressedError;class n{constructor(e,t){this.type="Logical",this.width=e,this.height=t}}class s{constructor(e,t){this.type="Physical",this.width=e,this.height=t}toLogical(e){return new n(this.width/e,this.height/e)}}class a{constructor(e,t){this.type="Logical",this.x=e,this.y=t}}class r{constructor(e,t){this.type="Physical",this.x=e,this.y=t}toLogical(e){return new a(this.x/e,this.y/e)}}var l,o,u;async function c(e,t){await i("plugin:event|unlisten",{event:e,eventId:t})}async function h(e,n,s){const a="string"==typeof s?.target?{kind:"AnyLabel",label:s.target}:s?.target??{kind:"Any"};return i("plugin:event|listen",{event:e,target:a,handler:t(n)}).then((t=>async()=>c(e,t)))}!function(e){e.WINDOW_RESIZED="tauri://resize",e.WINDOW_MOVED="tauri://move",e.WINDOW_CLOSE_REQUESTED="tauri://close-requested",e.WINDOW_DESTROYED="tauri://destroyed",e.WINDOW_FOCUS="tauri://focus",e.WINDOW_BLUR="tauri://blur",e.WINDOW_SCALE_FACTOR_CHANGED="tauri://scale-change",e.WINDOW_THEME_CHANGED="tauri://theme-changed",e.WEBVIEW_CREATED="tauri://webview-created",e.WEBVIEW_FILE_DROP="tauri://file-drop",e.WEBVIEW_FILE_DROP_HOVER="tauri://file-drop-hover",e.WEBVIEW_FILE_DROP_CANCELLED="tauri://file-drop-cancelled"}(l||(l={})),function(e){e[e.Critical=1]="Critical",e[e.Informational=2]="Informational"}(o||(o={}));class p{constructor(e){this._preventDefault=!1,this.event=e.event,this.id=e.id}preventDefault(){this._preventDefault=!0}isPreventDefault(){return this._preventDefault}}function d(){return window.__TAURI_INTERNALS__.metadata.windows.map((e=>new y(e.label,{skip:!0})))}!function(e){e.None="none",e.Normal="normal",e.Indeterminate="indeterminate",e.Paused="paused",e.Error="error"}(u||(u={}));const w=["tauri://created","tauri://error"];class y{constructor(e,t={}){this.label=e,this.listeners=Object.create(null),t?.skip||i("plugin:window|create",{options:{...t,parent:"string"==typeof t.parent?t.parent:t.parent?.label,label:e}}).then((async()=>this.emit("tauri://created"))).catch((async e=>this.emit("tauri://error",e)))}static getByLabel(e){return d().find((t=>t.label===e))??null}static getCurrent(){return new y(window.__TAURI_INTERNALS__.metadata.currentWindow.label,{skip:!0})}static getAll(){return d()}static async getFocusedWindow(){for(const e of d())if(await e.isFocused())return e;return null}async listen(e,t){return this._handleTauriEvent(e,t)?Promise.resolve((()=>{const i=this.listeners[e];i.splice(i.indexOf(t),1)})):h(e,t,{target:{kind:"Window",label:this.label}})}async once(e,t){return this._handleTauriEvent(e,t)?Promise.resolve((()=>{const i=this.listeners[e];i.splice(i.indexOf(t),1)})):async function(e,t,i){return h(e,(i=>{t(i),c(e,i.id).catch((()=>{}))}),i)}(e,t,{target:{kind:"Window",label:this.label}})}async emit(e,t){if(w.includes(e)){for(const i of this.listeners[e]||[])i({event:e,id:-1,payload:t});return Promise.resolve()}return async function(e,t){await i("plugin:event|emit",{event:e,payload:t})}(e,t)}async emitTo(e,t,n){if(w.includes(t)){for(const e of this.listeners[t]||[])e({event:t,id:-1,payload:n});return Promise.resolve()}return async function(e,t,n){const s="string"==typeof e?{kind:"AnyLabel",label:e}:e;await i("plugin:event|emit_to",{target:s,event:t,payload:n})}(e,t,n)}_handleTauriEvent(e,t){return!!w.includes(e)&&(e in this.listeners?this.listeners[e].push(t):this.listeners[e]=[t],!0)}async scaleFactor(){return i("plugin:window|scale_factor",{label:this.label})}async innerPosition(){return i("plugin:window|inner_position",{label:this.label}).then((({x:e,y:t})=>new r(e,t)))}async outerPosition(){return i("plugin:window|outer_position",{label:this.label}).then((({x:e,y:t})=>new r(e,t)))}async innerSize(){return i("plugin:window|inner_size",{label:this.label}).then((({width:e,height:t})=>new s(e,t)))}async outerSize(){return i("plugin:window|outer_size",{label:this.label}).then((({width:e,height:t})=>new s(e,t)))}async isFullscreen(){return i("plugin:window|is_fullscreen",{label:this.label})}async isMinimized(){return i("plugin:window|is_minimized",{label:this.label})}async isMaximized(){return i("plugin:window|is_maximized",{label:this.label})}async isFocused(){return i("plugin:window|is_focused",{label:this.label})}async isDecorated(){return i("plugin:window|is_decorated",{label:this.label})}async isResizable(){return i("plugin:window|is_resizable",{label:this.label})}async isMaximizable(){return i("plugin:window|is_maximizable",{label:this.label})}async isMinimizable(){return i("plugin:window|is_minimizable",{label:this.label})}async isClosable(){return i("plugin:window|is_closable",{label:this.label})}async isVisible(){return i("plugin:window|is_visible",{label:this.label})}async title(){return i("plugin:window|title",{label:this.label})}async theme(){return i("plugin:window|theme",{label:this.label})}async center(){return i("plugin:window|center",{label:this.label})}async requestUserAttention(e){let t=null;return e&&(t=e===o.Critical?{type:"Critical"}:{type:"Informational"}),i("plugin:window|request_user_attention",{label:this.label,value:t})}async setResizable(e){return i("plugin:window|set_resizable",{label:this.label,value:e})}async setMaximizable(e){return i("plugin:window|set_maximizable",{label:this.label,value:e})}async setMinimizable(e){return i("plugin:window|set_minimizable",{label:this.label,value:e})}async setClosable(e){return i("plugin:window|set_closable",{label:this.label,value:e})}async setTitle(e){return i("plugin:window|set_title",{label:this.label,value:e})}async maximize(){return i("plugin:window|maximize",{label:this.label})}async unmaximize(){return i("plugin:window|unmaximize",{label:this.label})}async toggleMaximize(){return i("plugin:window|toggle_maximize",{label:this.label})}async minimize(){return i("plugin:window|minimize",{label:this.label})}async unminimize(){return i("plugin:window|unminimize",{label:this.label})}async show(){return i("plugin:window|show",{label:this.label})}async hide(){return i("plugin:window|hide",{label:this.label})}async close(){return i("plugin:window|close",{label:this.label})}async destroy(){return i("plugin:window|destroy",{label:this.label})}async setDecorations(e){return i("plugin:window|set_decorations",{label:this.label,value:e})}async setShadow(e){return i("plugin:window|set_shadow",{label:this.label,value:e})}async setEffects(e){return i("plugin:window|set_effects",{label:this.label,value:e})}async clearEffects(){return i("plugin:window|set_effects",{label:this.label,value:null})}async setAlwaysOnTop(e){return i("plugin:window|set_always_on_top",{label:this.label,value:e})}async setAlwaysOnBottom(e){return i("plugin:window|set_always_on_bottom",{label:this.label,value:e})}async setContentProtected(e){return i("plugin:window|set_content_protected",{label:this.label,value:e})}async setSize(e){if(!e||"Logical"!==e.type&&"Physical"!==e.type)throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");return i("plugin:window|set_size",{label:this.label,value:{type:e.type,data:{width:e.width,height:e.height}}})}async setMinSize(e){if(e&&"Logical"!==e.type&&"Physical"!==e.type)throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");return i("plugin:window|set_min_size",{label:this.label,value:e?{type:e.type,data:{width:e.width,height:e.height}}:null})}async setMaxSize(e){if(e&&"Logical"!==e.type&&"Physical"!==e.type)throw new Error("the `size` argument must be either a LogicalSize or a PhysicalSize instance");return i("plugin:window|set_max_size",{label:this.label,value:e?{type:e.type,data:{width:e.width,height:e.height}}:null})}async setPosition(e){if(!e||"Logical"!==e.type&&"Physical"!==e.type)throw new Error("the `position` argument must be either a LogicalPosition or a PhysicalPosition instance");return i("plugin:window|set_position",{label:this.label,value:{type:e.type,data:{x:e.x,y:e.y}}})}async setFullscreen(e){return i("plugin:window|set_fullscreen",{label:this.label,value:e})}async setFocus(){return i("plugin:window|set_focus",{label:this.label})}async setIcon(e){return i("plugin:window|set_icon",{label:this.label,value:"string"==typeof e?e:Array.from(e)})}async setSkipTaskbar(e){return i("plugin:window|set_skip_taskbar",{label:this.label,value:e})}async setCursorGrab(e){return i("plugin:window|set_cursor_grab",{label:this.label,value:e})}async setCursorVisible(e){return i("plugin:window|set_cursor_visible",{label:this.label,value:e})}async setCursorIcon(e){return i("plugin:window|set_cursor_icon",{label:this.label,value:e})}async setCursorPosition(e){if(!e||"Logical"!==e.type&&"Physical"!==e.type)throw new Error("the `position` argument must be either a LogicalPosition or a PhysicalPosition instance");return i("plugin:window|set_cursor_position",{label:this.label,value:{type:e.type,data:{x:e.x,y:e.y}}})}async setIgnoreCursorEvents(e){return i("plugin:window|set_ignore_cursor_events",{label:this.label,value:e})}async startDragging(){return i("plugin:window|start_dragging",{label:this.label})}async startResizeDragging(e){return i("plugin:window|start_resize_dragging",{label:this.label,value:e})}async setProgressBar(e){return i("plugin:window|set_progress_bar",{label:this.label,value:e})}async setVisibleOnAllWorkspaces(e){return i("plugin:window|set_visible_on_all_workspaces",{label:this.label,value:e})}async onResized(e){return this.listen(l.WINDOW_RESIZED,(t=>{var i;t.payload=(i=t.payload,new s(i.width,i.height)),e(t)}))}async onMoved(e){return this.listen(l.WINDOW_MOVED,(t=>{var i;t.payload=(i=t.payload,new r(i.x,i.y)),e(t)}))}async onCloseRequested(e){return this.listen(l.WINDOW_CLOSE_REQUESTED,(t=>{const i=new p(t);Promise.resolve(e(i)).then((()=>{if(!i.isPreventDefault())return this.destroy()}))}))}async onFocusChanged(e){const t=await this.listen(l.WINDOW_FOCUS,(t=>{e({...t,payload:!0})})),i=await this.listen(l.WINDOW_BLUR,(t=>{e({...t,payload:!1})}));return()=>{t(),i()}}async onScaleChanged(e){return this.listen(l.WINDOW_SCALE_FACTOR_CHANGED,e)}async onThemeChanged(e){return this.listen(l.WINDOW_THEME_CHANGED,e)}}var b,g;!function(e){e.AppearanceBased="appearanceBased",e.Light="light",e.Dark="dark",e.MediumLight="mediumLight",e.UltraDark="ultraDark",e.Titlebar="titlebar",e.Selection="selection",e.Menu="menu",e.Popover="popover",e.Sidebar="sidebar",e.HeaderView="headerView",e.Sheet="sheet",e.WindowBackground="windowBackground",e.HudWindow="hudWindow",e.FullScreenUI="fullScreenUI",e.Tooltip="tooltip",e.ContentBackground="contentBackground",e.UnderWindowBackground="underWindowBackground",e.UnderPageBackground="underPageBackground",e.Mica="mica",e.Blur="blur",e.Acrylic="acrylic",e.Tabbed="tabbed",e.TabbedDark="tabbedDark",e.TabbedLight="tabbedLight"}(b||(b={})),function(e){e.FollowsWindowActiveState="followsWindowActiveState",e.Active="active",e.Inactive="inactive"}(g||(g={}));const _=new y("serial-port");let m={},v={};setInterval((()=>{console.log("check test listeners");for(let e in v)console.log("send test to "+e),v[e]("random")}),1e3);return e.SerialPort=class{constructor(e){this.is_test=!1,this.isOpen=!1,this.encoding=e.encoding||"utf-8",this.options={path:e.path,baudRate:e.baudRate,dataBits:e.dataBits||8,flowControl:e.flowControl||null,parity:e.parity||null,stopBits:e.stopBits||2,timeout:e.timeout||200},this.size=e.size||1024,this.is_test=e.is_test||!1}static async available_ports(){try{const e=await i("plugin:serialport|available_ports");for(const t in m)e[t]={manufacturer:"tester",pid:"tester",product:"tester",serial_number:"tester",type:"USB",vid:"tester"};return Promise.resolve(e)}catch(e){return Promise.reject(e)}}static async forceClose(e){return m[e]?(delete m[e],Promise.resolve()):await i("plugin:serialport|force_close",{path:e})}static async closeAll(){return m={},await i("plugin:serialport|close_all")}async cancelListen(){try{return void(this.unListen&&(this.unListen(),this.unListen=void 0))}catch(e){return Promise.reject("Failed to cancel serial monitoring: "+e)}}async cancelRead(){if(this.is_test)return Promise.resolve();try{return await i("plugin:serialport|cancel_read",{path:this.options.path})}catch(e){return Promise.reject(e)}}async change(e){try{let t=!1;return this.isOpen&&(t=!0,await this.close()),e.path&&(this.options.path=e.path),e.baudRate&&(this.options.baudRate=e.baudRate),t&&await this.open(),Promise.resolve()}catch(e){return Promise.reject(e)}}async close(){try{if(!this.isOpen)return;let e;return await this.cancelRead(),this.is_test||(e=await i("plugin:serialport|close",{path:this.options.path})),await this.cancelListen(),this.isOpen=!1,e}catch(e){return Promise.reject(e)}}async disconnected(e){let t=this.options.path?.toString().replace(/\.+/,""),i=`plugin-serialport-disconnected-${t}`;console.log("listen event: "+i);let n=await _.listen(i,(()=>{try{e(),n(),n=void 0}catch(e){console.error(e)}}))}async listen(e,t=!0){try{await this.cancelListen();let i=this.options.path?.toString().replace(/\.+/,""),n=`plugin-serialport-read-${i}`;return console.log("listen event: "+n),this.is_test?(console.log("add test event: "+this.options.path,e),v[this.options.path]=e,this.unListen=()=>{delete v[this.options.path]},Promise.resolve()):void(this.unListen=await _.listen(n,(({payload:i})=>{try{if(t){const t=new TextDecoder(this.encoding).decode(new Uint8Array(i.data));e(t)}else e(new Uint8Array(i.data))}catch(e){console.error(e)}})))}catch(e){return Promise.reject("Failed to monitor serial port data: "+e)}}async open(){try{if(!this.options.path)return Promise.reject("path Can not be empty!");if(!this.options.baudRate)return Promise.reject("baudRate Can not be empty!");if(this.isOpen)return;let e;return this.is_test?m[this.options.path]=this:e=await i("plugin:serialport|open",{path:this.options.path,baudRate:this.options.baudRate,dataBits:this.options.dataBits,flowControl:this.options.flowControl,parity:this.options.parity,stopBits:this.options.stopBits,timeout:this.options.timeout}),this.isOpen=!0,this.disconnected((()=>{this.isOpen=!1})).catch((e=>console.error(e))),Promise.resolve(e)}catch(e){return Promise.reject(e)}}async read(e){try{if(this.is_test){const e="";return v[this.options.path]&&v[this.options.path](e),Promise.resolve()}return await i("plugin:serialport|read",{path:this.options.path,timeout:e?.timeout||this.options.timeout,size:e?.size||this.size})}catch(e){return Promise.reject(e)}}async setBaudRate(e){try{let t=!1;return this.isOpen&&(t=!0,await this.close()),this.options.baudRate=e,t&&await this.open(),Promise.resolve()}catch(e){return Promise.reject(e)}}async setPath(e){try{let t=!1;return this.isOpen&&(t=!0,await this.close()),this.options.path=e,t&&await this.open(),Promise.resolve()}catch(e){return Promise.reject(e)}}async write(e){try{return this.isOpen?this.is_test?Promise.resolve(2):await i("plugin:serialport|write",{value:e,path:this.options.path}):Promise.reject(`serial port ${this.options.path} not opened!`)}catch(e){return Promise.reject(e)}}async writeBinary(e){try{return this.isOpen?e instanceof Uint8Array||e instanceof Array?this.is_test?Promise.resolve(2):await i("plugin:serialport|write_binary",{value:Array.from(e),path:this.options.path}):Promise.reject("value Argument type error! Expected type: string, Uint8Array, number[]"):Promise.reject(`serial port ${this.options.path} not opened!`)}catch(e){return Promise.reject(e)}}},e}({});Object.defineProperty(window.__TAURI__,"serialplugin",{value:__TAURI_PLUGIN_SERIALPLUGIN__})}
